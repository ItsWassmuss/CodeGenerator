<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

    <!-- Button 1 Style -->
    <Style x:Key="RoundButton1" TargetType="{x:Type Button}">
        <!--<Setter Property="Width" Value="20"/>-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MyBorder" Width="45" Margin="2.5,0,0,0" >
                        <Image x:Name="MyImage2"  Source="/Content/Images/EditGridIcon.png"  Width="20"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource  AncestorType=DataGridRow}}"   Value="True">
                            <Setter TargetName="MyImage2" Property="Source" Value="/Content/Images/EditGridSelectedIcon.png" />

                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBorder" Property="Background" Value="#cdcdcd" />
                            <Setter TargetName="MyImage2" Property="Source" Value="/Content/Images/EditGridHoverIcon.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button 2 Style -->
    <Style x:Key="RoundButton2" TargetType="{x:Type Button}">
        <!--<Setter Property="Width" Value="20"/>-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="MyBorder" Width="45" Margin="2.5,0,0,0" >
                        <Image x:Name="MyImage"  Source="/Content/Images/DeleteGridIcon.png"  Width="20"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}"     Value="True">
                            <Setter TargetName="MyImage" Property="Source" Value="/Content/Images/DeleteGridSelectedIcon.png" />

                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MyBorder" Property="Background" Value="#cdcdcd" />
                            <Setter TargetName="MyImage" Property="Source" Value="/Content/Images/DeleteGridHoverIcon.png" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button 3 Style -->
    <Style x:Key="RoundButton3" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="RefractionLayer" >
                        <Grid.Background>
                            <ImageBrush ImageSource="/Content/Images/DeleteFilterIcon.png"  />
                        </Grid.Background>
                        <!--<Ellipse x:Name="RefractionLayer">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="#b20000">
                                </SolidColorBrush>
                            </Ellipse.Fill>
                        </Ellipse>-->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RefractionLayer" Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/Content/Images/DeleteFilterIconHover.png"  />
                                    <!--<SolidColorBrush Color="#ea5800"></SolidColorBrush>-->
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button 4 Style -->
    <Style x:Key="btnPrint"  TargetType="{x:Type Button}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="20"/>
        <!--<Setter Property="Background" Value="#ffffff"/>-->
        <!--<Setter Property="BorderThickness" Value="18,5,18,5"/>-->
        <!--<Setter Property="BorderBrush" Value="White"/>-->
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Button.Background">
            <Setter.Value>
                <ImageBrush ImageSource="/Content/Images/PrintIcon.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                        Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Gainsboro" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.25" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--<Style x:Key="RectButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="18,5,18,5"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>

    </Style>-->

    <!-- Search Button  Style -->
    <Style x:Key="SearchButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="37"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
